{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pageNumbers","Array","map","_","i","className","href","onClick","page","App","items","from","to","numbers","n","push","getNumbers","useState","current","setCurrent","setPerPage","displayedItems","slice","startIndex","endIndex","min","length","infoText","id","value","onChange","e","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MASaA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAwB,YAAIC,MAAMJ,IACrCK,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KAcrB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBV,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRU,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QApBR,WACMZ,EAAc,GAChBC,EAAaD,EAAc,IAazB,oBAWDK,EAAYE,KAAI,SAACM,GAAD,OACf,oBAEEH,UAAS,kCACLV,IAAgBa,EAAO,SAAW,IAHxC,SAKE,mBACE,UAAQ,WACRH,UAAU,YACVC,KAAI,WAAME,GACVD,QAAS,WACPX,EAAaY,IALjB,SAQGA,KAZEA,MAiBT,oBAAIH,UAAS,oBAAeV,IAAgBE,EAAa,WAAa,IAAtE,SACE,mBACE,UAAQ,WACRQ,UAAU,YACVC,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QA7CgB,WAClBZ,EAAcE,GAChBD,EAAaD,EAAc,IAsCzB,wBC7DKc,EAAgB,WAE3B,IAAMC,ECPD,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDAOG,CAAW,EAAG,IAAId,KAAI,SAACY,GAAD,qBAAeA,MAEnD,EAA8BG,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgB0B,EAAhB,KAWMC,EAA2BX,EAAMY,OACpCJ,EAAU,GAAKxB,EAChBwB,EAAUxB,GAEN6B,GAAsBL,EAAU,GAAKxB,EAAU,EAC/C8B,EAAmB1B,KAAK2B,IAAIP,EAAUxB,EAASgB,EAAMgB,QACrDC,EAAQ,eAAWT,EAAX,mBAA6BK,EAA7B,cAA6CC,EAA7C,eAA4Dd,EAAMgB,OAAlE,KAEd,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACGsB,IAGH,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOnC,EACPoC,SA5BkB,SAACC,GAC3BX,EAAWY,OAAOD,EAAEE,OAAOJ,QAC3BV,EAAW,IAqBL,UAOE,wBAAQU,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAOiB,EAAMgB,OACbhC,QAASA,EACTC,YAAauB,EACbtB,aAlDmB,SAACY,GACxBW,EAAWX,MAoDT,6BACGa,EAAenB,KAAI,SAACiC,GAAD,OAClB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YEhElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f3c113f5.chunk.js","sourcesContent":["import React from 'react';\n\ntype PaginationProps = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const pageNumbers: number[] = [...Array(totalPages)]\n    .map((_, i) => i + 1);\n\n  function handlePrevClick() {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  }\n\n  const handleNextClick = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevClick}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map((page) => (\n        <li\n          key={page}\n          className={`page-item \n            ${currentPage === page ? 'active' : ''}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nexport const App: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\n  const [current, setCurrent] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const handlePageChange = (page: number) => {\n    setCurrent(page);\n  };\n\n  const handlePerPageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(e.target.value));\n    setCurrent(1);\n  };\n\n  const displayedItems: string[] = items.slice(\n    (current - 1) * perPage,\n    current * perPage,\n  );\n  const startIndex: number = (current - 1) * perPage + 1;\n  const endIndex: number = Math.min(current * perPage, items.length);\n  const infoText = `Page ${current} (items ${startIndex} - ${endIndex} of ${items.length})`;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {infoText}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={current}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {displayedItems.map((item: string) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}