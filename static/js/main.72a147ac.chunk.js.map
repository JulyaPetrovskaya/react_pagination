{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pageNumbers","i","push","className","href","onClick","e","preventDefault","map","page","App","items","from","to","numbers","n","getNumbers","useState","current","setCurrent","setPerPage","min","length","id","value","onChange","Number","target","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"8KASaA,EAAwC,SAAC,GAUpD,IALK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAwB,GAErBC,EAAI,EAAGA,GAAKJ,EAAYI,GAAK,EACpCD,EAAYE,KAAKD,GAiBnB,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBR,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRQ,UAAU,YACVC,KAAK,QACLC,QArBgB,SAACC,GACvBA,EAAEC,iBACEZ,EAAc,GAChBC,EAAaD,EAAc,IAczB,oBAUDK,EAAYQ,KAAI,SAACC,GAAD,OACf,oBAEEN,UAAS,kCACLR,IAAgBc,EAAO,SAAW,IAHxC,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVC,KAAI,WAAMK,GACVJ,QAAS,SAACC,GACRA,EAAEC,iBACFX,EAAaa,IANjB,SASGA,KAbEA,MAkBT,oBAAIN,UAAS,oBAAeR,IAAgBE,EAAa,WAAa,IAAtE,SACE,mBACE,UAAQ,WACRM,UAAU,YACVC,KAAK,QACLC,QA7CgB,SAACC,GACvBA,EAAEC,iBACEZ,EAAcE,GAChBD,EAAaD,EAAc,IAsCzB,wBClEKe,EAAgB,WAE3B,IAAMC,ECPD,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQZ,KAAKa,GAGf,OAAOD,EDAOE,CAAW,EAAG,IAAIR,KAAI,SAACO,GAAD,qBAAeA,MAEnD,EAA8BE,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgB0B,EAAhB,KAWA,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEG,IACAe,EACA,IAJH,SAMG,KACCA,EAAU,GAAKxB,EAAU,EAC1B,IARH,IAUGI,KAAKuB,IAAIH,EAAUxB,EAASiB,EAAMW,QAClC,IAXH,KAaG,IACAX,EAAMW,OAdT,OAkBA,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAO9B,EACP+B,SAlCkB,SAACnB,GAC3Bc,EAAWM,OAAOpB,EAAEqB,OAAOH,QAC3BL,EAAW,IA2BL,UAOE,wBAAQK,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOkB,EAAMW,OACb5B,QAASA,EACTC,YAAauB,EACbtB,aAxDmB,SAACa,GACxBU,EAAWV,MA0DT,6BACGE,EACEkB,OAAOX,EAAU,GAAKxB,EAASwB,EAAUxB,GACzCc,KAAI,SAACsB,GAAD,OACH,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YExEpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.72a147ac.chunk.js","sourcesContent":["import React from 'react';\n\ntype PaginationProps = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const pageNumbers: number[] = [];\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    pageNumbers.push(i);\n  }\n\n  const handlePrevClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={handlePrevClick}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map((page) => (\n        <li\n          key={page}\n          className={`page-item \n            ${currentPage === page ? 'active' : ''}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={(e) => {\n              e.preventDefault();\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nexport const App: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\n  const [current, setCurrent] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const handlePageChange = (page: number) => {\n    setCurrent(page);\n  };\n\n  const handlePerPageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(e.target.value));\n    setCurrent(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {' '}\n        {current}\n        {' '}\n        (items\n        {' '}\n        {(current - 1) * perPage + 1}\n        {' '}\n        -\n        {Math.min(current * perPage, items.length)}\n        {' '}\n        of\n        {' '}\n        {items.length}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={current}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items\n          .slice((current - 1) * perPage, current * perPage)\n          .map((item) => (\n            <li data-cy=\"item\" key={item}>\n              {item}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}